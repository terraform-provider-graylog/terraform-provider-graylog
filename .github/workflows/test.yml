---
name: CI
on: [push,pull_request]
env:
  tf_version: '0.12.29'
  tf_working_dir: 'examples/v0.12'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '1.15.6'
    - run: go version
    - run: go mod download

    - run: go build -o examples/v0.12/.terraform/plugins/linux_amd64/terraform-provider-graylog ./cmd/terraform-provider-graylog
      env:
        CGO_ENABLED: "0"
    - name: 'Terraform Format'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: ${{ env.tf_version }}
        tf_actions_subcommand: 'fmt'
        tf_actions_working_dir: ${{ env.tf_working_dir }}
        tf_actions_comment: false
    - name: 'Terraform Init'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: ${{ env.tf_version }}
        tf_actions_subcommand: 'init'
        tf_actions_working_dir: ${{ env.tf_working_dir }}
        tf_actions_comment: false
    - name: 'Terraform Validate'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: ${{ env.tf_version }}
        tf_actions_subcommand: 'validate'
        tf_actions_working_dir: ${{ env.tf_working_dir }}
        tf_actions_comment: false
        
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: v1.34
    - name: test
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
      run: |
        bash scripts/test-code-climate.sh "$GITHUB_REPOSITORY"
